 // Failed to get sources. Instead, stub sources have been generated by the disassembler.
 // Implementation of methods is unavailable.
 package java.awt;
 public class Color implements java.awt.Paint, java.io.Serializable {
   
   public static final java.awt.Color white;
   
   public static final java.awt.Color WHITE;
   
   public static final java.awt.Color lightGray;
   
   public static final java.awt.Color LIGHT_GRAY;
   
   public static final java.awt.Color gray;
   
   public static final java.awt.Color GRAY;
   
   public static final java.awt.Color darkGray;
   
   public static final java.awt.Color DARK_GRAY;
   
   public static final java.awt.Color black;
   
   public static final java.awt.Color BLACK;
   
   public static final java.awt.Color red;
   
   public static final java.awt.Color RED;
   
   public static final java.awt.Color pink;
   
   public static final java.awt.Color PINK;
   
   public static final java.awt.Color orange;
   
   public static final java.awt.Color ORANGE;
   
   public static final java.awt.Color yellow;
   
   public static final java.awt.Color YELLOW;
   
   public static final java.awt.Color green;
   
   public static final java.awt.Color GREEN;
   
   public static final java.awt.Color magenta;
   
   public static final java.awt.Color MAGENTA;
   
   public static final java.awt.Color cyan;
   
   public static final java.awt.Color CYAN;
   
   public static final java.awt.Color blue;
   
   public static final java.awt.Color BLUE;
   
   int value;
   
   private float[] frgbvalue;
   
   private float[] fvalue;
   
   private float falpha;
   
   private java.awt.color.ColorSpace cs;
   
   private static final long serialVersionUID = 118526816881161077L;
   
   private static final double FACTOR = 0.7;
   
   private static native void initIDs();
   
   private static void testColorValueRange(int r, int g, int b, int a) {
   }
   
   private static void testColorValueRange(float r, float g, float b, float a) {
   }
   
   public Color(int r, int g, int b) {
   }
   
   public Color(int r, int g, int b, int a) {
   }
   
   public Color(int rgb) {
   }
   
   public Color(int rgba, boolean hasalpha) {
   }
   
   public Color(float r, float g, float b) {
   }
   
   public Color(float r, float g, float b, float a) {
   }
   
   public Color(java.awt.color.ColorSpace cspace, float[] components, float alpha) {
   }
   
   public int getRed() {
     return 0;
   }
   
   public int getGreen() {
     return 0;
   }
   
   public int getBlue() {
     return 0;
   }
   
   public int getAlpha() {
     return 0;
   }
   
   public int getRGB() {
     return 0;
   }
   
   public java.awt.Color brighter() {
     return null;
   }
   
   public java.awt.Color darker() {
     return null;
   }
   
   public int hashCode() {
     return 0;
   }
   
   public boolean equals(java.lang.Object obj) {
     return false;
   }
   
   public java.lang.String toString() {
     return null;
   }
   
   public static java.awt.Color decode(java.lang.String nm) throws java.lang.NumberFormatException {
     return null;
   }
   
   public static java.awt.Color getColor(java.lang.String nm) {
     return null;
   }
   
   public static java.awt.Color getColor(java.lang.String nm, java.awt.Color v) {
     return null;
   }
   
   public static java.awt.Color getColor(java.lang.String nm, int v) {
     return null;
   }
   
   public static int HSBtoRGB(float hue, float saturation, float brightness) {
     return 0;
   }
   
   public static float[] RGBtoHSB(int r, int g, int b, float[] hsbvals) {
     return null;
   }
   
   public static java.awt.Color getHSBColor(float h, float s, float b) {
     return null;
   }
   
   public float[] getRGBComponents(float[] compArray) {
     return null;
   }
   
   public float[] getRGBColorComponents(float[] compArray) {
     return null;
   }
   
   public float[] getComponents(float[] compArray) {
     return null;
   }
   
   public float[] getColorComponents(float[] compArray) {
     return null;
   }
   
   public float[] getComponents(java.awt.color.ColorSpace cspace, float[] compArray) {
     return null;
   }
   
   public float[] getColorComponents(java.awt.color.ColorSpace cspace, float[] compArray) {
     return null;
   }
   
   public java.awt.color.ColorSpace getColorSpace() {
     return null;
   }
   
   public synchronized java.awt.PaintContext createContext(java.awt.image.ColorModel cm, java.awt.Rectangle r, java.awt.geom.Rectangle2D r2d, java.awt.geom.AffineTransform xform, java.awt.RenderingHints hints) {
     return null;
   }
   
   public int getTransparency() {
     return 0;
   }
   
   static {} {
   }
 }